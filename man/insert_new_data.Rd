% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/insert_new_data.R
\name{insert_new_data}
\alias{insert_new_data}
\title{Insert Data into a Database Table (Simple)}
\usage{
insert_new_data(db_connection, table_name, new_data_df)
}
\arguments{
\item{db_connection}{A valid DBIConnection object (e.g., from \code{DBI::dbConnect}).}

\item{table_name}{A character string: the name of the target database table.}

\item{new_data_df}{A data frame with data to insert. Column names should
match the target table's columns.}
}
\value{
Invisibly returns \code{TRUE} on success (from \code{DBI::dbAppendTable}).
Throws an error on failure (e.g., table not found, column mismatch,
connection issue).
}
\description{
Appends a data frame to a specified database table using a
DBI connection via \code{DBI::dbAppendTable}.
}
\examples{
\dontrun{
# --- Prerequisites ---
# install.packages("RSQLite") # Example backend
library(DBI)

# --- Setup Example Database ---
# Create an in-memory SQLite database for demonstration
con <- dbConnect(RSQLite::SQLite(), ":memory:")

# Create an initial table
initial_df <- data.frame(symbol = "AAPL", date = Sys.Date(), close = 150.0)
dbWriteTable(con, "stock_prices", initial_df)
print("Initial table:")
print(dbReadTable(con, "stock_prices"))

# --- Data to Insert ---
df_to_insert <- data.frame(symbol = "MSFT", date = Sys.Date(), close = 280.5)

# --- Use the function ---
success <- insert_new_data(
             db_connection = con,
             table_name = "stock_prices",
             new_data_df = df_to_insert
           )

# --- Verify ---
if (success) {
  print("Data inserted successfully. Updated table:")
  print(dbReadTable(con, "stock_prices"))
}

# --- Clean up ---
dbDisconnect(con)
}

}

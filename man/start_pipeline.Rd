% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/start_pipline.R
\name{start_pipeline}
\alias{start_pipeline}
\title{Start Data Pipeline using Yahoo Finance Data}
\usage{
start_pipeline(
  symbols_to_process,
  db_connection,
  table_name,
  date_from,
  date_to = Sys.Date(),
  format_digits = 2
)
}
\arguments{
\item{symbols_to_process}{A character vector of stock symbols.}

\item{db_connection}{A valid DBI connection object.}

\item{table_name}{The name of the target database table.}

\item{date_from}{Character string or Date. Start date for the data query.}

\item{date_to}{Character string or Date. End date for the data query. Defaults to \code{Sys.Date()}.}

\item{format_digits}{Integer. Digits for rounding in \code{format_data}. Defaults to 2.}
}
\value{
Invisibly returns a list indicating pipeline outcome:
\code{success}: Logical (TRUE if insertion completed without error, FALSE otherwise).
\code{message}: Character string describing the outcome or error.
\code{symbols_processed}: Character vector of unique symbols in the data that
was attempted to be inserted (useful even on failure). NULL if fetch failed.
}
\description{
Orchestrates a pipeline to fetch data for multiple symbols
from Yahoo Finance, format it, and insert it into a database table.
}
\examples{
\dontrun{
# --- Assumes you have defined ---
# log_summary(message_text)
# yahoo_query_data(symbols, date_from, date_to)
# format_data(data, digits)
# insert_new_data(db_connection, table_name, new_data_df)

# --- Prerequisites ---
# install.packages("tidyquant")
# install.packages("RSQLite") # Example backend
# install.packages("dplyr") # Often needed by format_data
library(tidyquant)
library(DBI)
library(dplyr)

# --- Setup Example Database ---
con <- dbConnect(RSQLite::SQLite(), ":memory:")
try(dbExecute(con, "CREATE TABLE stock_data (
                 symbol TEXT, date TEXT, open REAL, high REAL,
                 low REAL, close REAL, volume REAL, adjusted REAL)"), silent = TRUE)

# --- Define Symbols & Dates ---
symbols <- c("AAPL", "GOOG") # Example symbols
start_date <- Sys.Date() - 60 # Last 60 days

# --- Run the Pipeline ---
pipeline_result <- start_pipeline(
  symbols_to_process = symbols,
  db_connection = con,
  table_name = "stock_data",
  date_from = start_date
)

# --- Check Results ---
print(pipeline_result)
if (pipeline_result$success) {
  print("Data in DB:")
  print(dbReadTable(con, "stock_data"))
}

# --- Clean up ---
dbDisconnect(con)
}

}
